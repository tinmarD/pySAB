

.. _sphx_glr_auto_examples_Time_Features_examples_plot_time_features_hits_rt_regression.py:


============================================
     Hits / Reaction times correlation
============================================

This example study the correlation between the Hits features and the reaction times.




.. code-block:: python


    from os.path import isdir, join
    import matplotlib.pyplot as plt
    import sab_dataset
    import seaborn as sns
    sns.set()
    sns.set_context('paper')







Load the data : sab dataset



.. code-block:: python

    sab_dataset_dirpath = join('pySAB', 'sample_data') if isdir('pySAB') else join('..', '..', 'pySAB', 'sample_data')
    sab_dataset_filename = 'sab_dataset_name.p'
    rec_dataset = sab_dataset.load_sab_dataset(join(sab_dataset_dirpath, sab_dataset_filename))







Downsample the data



.. code-block:: python

    rec_dataset.downsample(8)





.. rst-class:: sphx-glr-script-out

 Out::

    New sampling rate is 256.0


Construct the features from the SabDataset object - Select only 'hits' and 'correct rejects' trials and keep only
2 electrodes of interest :



.. code-block:: python

    time_features = rec_dataset.create_features(electrode_sel=['TB\'', 'C\''],
                                                trial_sel=(rec_dataset.hits | rec_dataset.correct_rejects))
    print(time_features)





.. rst-class:: sphx-glr-script-out

 Out::

    Time Features subject_id_rec - 25 features, 180 time points, 356 trials
    2 labels : {1: 'Hits', 2: 'Correct rejects'}
    Feature types : Amp


Extract features, if called without any parameter, the function return the possible feature to extract



.. code-block:: python

    time_features.extract_feature()





.. rst-class:: sphx-glr-script-out

 Out::

    Possible features to compute : ['filt_bandpower', 'dwt', 'stft_bandpower', 'stft_phase', 'cwt_bandpower', 'cwt_phase', 'phase_hilbert']



.. code-block:: python

    time_features.plot_feature_hits_reaction_time(time_points=1, feature_pos=1)




.. image:: /auto_examples/Time_Features_examples/images/sphx_glr_plot_time_features_hits_rt_regression_001.png
    :align: center





.. code-block:: python

    time_features.interactive_feature_rt_correlation(feature_channame='C\'')
    plt.gcf().set_size_inches(11, 7)



.. image:: /auto_examples/Time_Features_examples/images/sphx_glr_plot_time_features_hits_rt_regression_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  11.981 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_time_features_hits_rt_regression.py <plot_time_features_hits_rt_regression.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_time_features_hits_rt_regression.ipynb <plot_time_features_hits_rt_regression.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
